[{"/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/index.js":"1","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/reportWebVitals.js":"2","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/App.js":"3","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/TopArtists.js":"4","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/Playlist.js":"5","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/TopTracks.js":"6","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/Body.js":"7","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/Recommendations.js":"8","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/RecentlyPlayed.js":"9","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/RecommendedTracks.js":"10"},{"size":499,"mtime":1613264938151,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1613264938152,"results":"13","hashOfConfig":"12"},{"size":1955,"mtime":1615076538556,"results":"14","hashOfConfig":"12"},{"size":1332,"mtime":1615019728560,"results":"15","hashOfConfig":"12"},{"size":1184,"mtime":1615018887170,"results":"16","hashOfConfig":"12"},{"size":1360,"mtime":1615021548536,"results":"17","hashOfConfig":"12"},{"size":2955,"mtime":1615076599964,"results":"18","hashOfConfig":"12"},{"size":1994,"mtime":1615077478672,"results":"19","hashOfConfig":"12"},{"size":1485,"mtime":1615073469340,"results":"20","hashOfConfig":"12"},{"size":1909,"mtime":1615077855493,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"biuhsa",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/index.js",[],["47","48"],"/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/reportWebVitals.js",[],"/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/App.js",["49"],"\nimport './App.css';\nimport Body from \"./Body\"\nimport React from \"react\"\nimport TopArtists from \"./TopArtists\"\nimport queryString from \"query-string\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { render } from '@testing-library/react';\nimport Playlist from './Playlist';\nimport TopTracks from \"./TopTracks\"\nimport Recommendations from \"./Recommendations\"\nimport RecentlyPlayed from './RecentlyPlayed';\nimport RecommendedTracks from './RecommendedTracks'\n\nclass App extends React.Component{\n    constructor() {\n      super()\n      this.state = {\n        token: \"\"\n      }\n    }\n\n    componentDidMount() {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token\n      if (!accessToken)\n        return;\n      this.setState({token: accessToken})\n    }\n    render () {\n      \n      return(\n      <div className=\"App\">\n        <div className=\"headerContainer\">\n          <h1 className=\"header\">Spotify Stats App</h1>\n        </div>\n\n       \n        <main>\n\n\n        <Router>\n        <Switch>\n          <Route path=\"/\" exact component={() => <Body token={this.state.token} />} />\n          <Route path=\"/playlists\" exact component={() => <Playlist token={this.state.token} />} />\n          <Route path=\"/artists\" exact component={() => <TopArtists token={this.state.token} />} />\n          <Route path=\"/toptracks\" exact component={() => <TopTracks token={this.state.token} />} />\n          <Route path=\"/recommendations\" exact component={() => <Recommendations token={this.state.token} />} />\n          <Route path=\"/recently-played\" exact component={() => <RecentlyPlayed token={this.state.token} />} />\n          <Route path=\"/recommended-tracks\" exact component={() => <RecommendedTracks token={this.state.token} />} />\n        </Switch>\n        </Router>\n\n        \n        \n\n          \n        </main>\n          \n      </div>\n      )\n    }\n  \n}\n\n\n\nexport default App;\n","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/TopArtists.js",["50"],"import React from \"react\"\nimport \"./TopArtists.css\"\n\nclass TopArtists extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            \n        }\n    }\n\n    componentDidMount() {\n        \n\n        if (!this.props.token)\n            return;\n        \n\n        fetch('https://api.spotify.com/v1/me/top/artists', {\n            headers: {'Authorization': 'Bearer ' + this.props.token}\n        }).then(response => response.json()) \n        .then(data => this.setState({\n            topArtists: data.items.map(artist => {\n            return {\n                name: artist.name,\n                imageUrl: artist.images[2].url\n            }\n        })\n        })) \n    }\n\n    render() {\n        let rank = 1\n        return (\n            <div>\n            {this.state.topArtists ? \n            <div className = \"topArtists\">\n            \n            <h3 className=\"heading\">Top Artists:</h3>\n            <br />\n            {this.state.topArtists.map(artist => \n              <div>\n                  <div>\n                  <img src = {artist.imageUrl}></img>\n                  </div>\n                  <p className=\"artistName\">{rank++}. {artist.name}</p>\n              </div>\n              )}\n            </div>\n          : []\n          }\n          </div>\n        \n        )\n    }\n}\n\nexport default TopArtists","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/Playlist.js",["51"],"import React from \"react\"\nimport \"./Playlist.css\"\n\n\nclass Playlist extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n\n        }\n\n    }\n\n    componentDidMount() {\n        if(!this.props.token) return;\n\n    fetch('https://api.spotify.com/v1/me/playlists', {\n      headers: {'Authorization': 'Bearer ' + this.props.token}\n    }).then(response => response.json())\n    .then(data => this.setState({\n      playlists: data.items.map(item => {\n        return {\n          name: item.name,\n          imageUrl: item.images[0].url, \n          songs: []\n        }\n    })\n    }))\n    }\n    render() {\n        return(\n        <div>\n            {this.state.playlists ?\n            <div className=\"playlists\">\n\n            <h3 className=\"heading\">Playlists:</h3>\n            <br />\n            {this.state.playlists.map(playlist => \n            <div> \n              <div>\n              <img src = {playlist.imageUrl} style = {{width: '160px'}}></img>\n              </div>\n              <p className=\"playlistName\">{playlist.name}</p>\n          </div>\n          )}\n          </div>\n          : []\n          }\n        </div>\n        )\n    }\n}\n\nexport default Playlist\n","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/TopTracks.js",[],"/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/Body.js",["52"],"import React from \"react\";\nimport \"./Body.css\"\nimport { Redirect, Link } from \"react-router-dom\";\n\nlet accessToken\nclass Body extends React.Component{\n\n  constructor() {\n    super()\n    this.state = {\n      user: {\n        name: \"\"\n      },\n      isLoggedIn: false\n    }\n  }\n\n  componentDidMount() {\n  \n    if(!this.props.token) \n      return;\n    else \n      this.setState({isLoggedIn: true})\n\n    accessToken = this.props.token\n    \n    fetch(\"https://api.spotify.com/v1/me\", {\n      headers: {'Authorization': 'Bearer ' + accessToken}\n    }).then(response => response.json())\n    .then(data => this.setState({\n      user: {\n        name: data.display_name,\n        imgUrl: data.images[0].url\n      },\n      redirect: null\n    }))\n    \n\n    \n    \n\n\n  }\n  \n  \n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n\n      \n      <div>\n        \n        <div className=\"profile\">\n          <img src = {this.state.user.imgUrl} style = {{width: '60px'}}></img>\n          <h1 style={{display: !this.state.user.name && \"none\"}} className=\"username\">\n            Username: {this.state.user.name}\n          </h1>\n          \n        </div>\n        \n        \n\n        <button style={{display: this.state.isLoggedIn && \"none\"}} className=\"login\" onClick={handleLogin}> Login </button>\n        <Link to=\"/artists\">\n          <button style={{display: !this.state.isLoggedIn && \"none\"}}className=\"artistsButton\" > Top Artists </button>\n        </Link>\n        <Link to=\"/playlists\">\n          <button style={{display: !this.state.isLoggedIn && \"none\"}}className=\"playlistsButton\" > Playlists </button>\n        </Link>\n        <Link to=\"/toptracks\">\n          <button style={{display: !this.state.isLoggedIn && \"none\"}}className=\"topTracksButton\" > Top Tracks </button>\n        </Link>\n        <Link to=\"/recommendations\">\n          <button style={{display: !this.state.isLoggedIn && \"none\"}}className=\"recommendedButton\" > Recommended </button>\n        </Link>\n        <Link to=\"/recently-played\">\n          <button style={{display: !this.state.isLoggedIn && \"none\"}}className=\"recentlyPlayedButton\" > RecentlyPlayed </button>\n        </Link>\n        <Link to=\"/recommended-tracks\">\n          <button style={{display: !this.state.isLoggedIn && \"none\"}}className=\"recentlyPlayedButton\" > Recommended Tracks </button>\n        </Link>\n        <br />\n\n        <ul className=\"description\" >\n            <li>Login to your Spotify account</li>\n            <li>View your top artists and songs</li>\n            <li>Access your playlists</li>\n            <li>See your recently played artists and songs</li>\n            <li>Finds new songs based on recommendations</li>\n        </ul>\n\n        <div style={{display: 'flex'}}>\n        <br />\n        <hr />\n        \n\n          </div>\n        </div>\n        \n\n    );\n  }\n}\n\n\nfunction handleLogin() {\n  window.open(\"http://localhost:8888/login\");\n}\n\n\n\n\n\nexport default Body\n","/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/Recommendations.js",[],"/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/RecentlyPlayed.js",[],"/Users/kianezaz/Desktop/Tri-Dev/TriDevApp/src/RecommendedTracks.js",["53","54","55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":8,"column":10,"nodeType":"63","messageId":"64","endLine":8,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":44,"column":19,"nodeType":"67","endLine":44,"endColumn":48},{"ruleId":"65","severity":1,"message":"66","line":41,"column":15,"nodeType":"67","endLine":41,"endColumn":73},{"ruleId":"65","severity":1,"message":"66","line":56,"column":11,"nodeType":"67","endLine":56,"endColumn":73},{"ruleId":"61","severity":1,"message":"68","line":19,"column":15,"nodeType":"63","messageId":"64","endLine":19,"endColumn":26},{"ruleId":"61","severity":1,"message":"69","line":20,"column":15,"nodeType":"63","messageId":"64","endLine":20,"endColumn":20},{"ruleId":"61","severity":1,"message":"70","line":25,"column":19,"nodeType":"63","messageId":"64","endLine":25,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":26,"column":26,"nodeType":"73","messageId":"74","endLine":26,"endColumn":145},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'topArtistID' is assigned a value but never used.","'genre' is assigned a value but never used.","'topTrackID' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]
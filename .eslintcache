[{"/Users/pkamanboina/TriDevApp/src/index.js":"1","/Users/pkamanboina/TriDevApp/src/reportWebVitals.js":"2","/Users/pkamanboina/TriDevApp/src/App.js":"3","/Users/pkamanboina/TriDevApp/src/Body.js":"4","/Users/pkamanboina/TriDevApp/src/Playlist.js":"5","/Users/pkamanboina/TriDevApp/src/TopTracks.js":"6","/Users/pkamanboina/TriDevApp/src/TopArtists.js":"7"},{"size":499,"mtime":1613097998370,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1613097998370,"results":"10","hashOfConfig":"9"},{"size":1481,"mtime":1613932880435,"results":"11","hashOfConfig":"9"},{"size":2169,"mtime":1613934287574,"results":"12","hashOfConfig":"9"},{"size":1115,"mtime":1613930765528,"results":"13","hashOfConfig":"9"},{"size":1126,"mtime":1613932518662,"results":"14","hashOfConfig":"9"},{"size":1232,"mtime":1613930753513,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"lra20v",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"/Users/pkamanboina/TriDevApp/src/index.js",[],["36","37"],"/Users/pkamanboina/TriDevApp/src/reportWebVitals.js",[],"/Users/pkamanboina/TriDevApp/src/App.js",["38"],"\nimport './App.css';\nimport Body from \"./Body\"\nimport React from \"react\"\nimport TopArtists from \"./TopArtists\"\nimport queryString from \"query-string\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { render } from '@testing-library/react';\nimport Playlist from './Playlist';\nimport TopTracks from \"./TopTracks\"\n\nclass App extends React.Component{\n    constructor() {\n      super()\n      this.state = {\n        token: \"\"\n      }\n    }\n\n    componentDidMount() {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token\n      if (!accessToken)\n        return;\n      this.setState({token: accessToken})\n    }\n    render () {\n      \n      return(\n      <div className=\"App\">\n        <div className=\"headerContainer\">\n          <h1 className=\"header\">Spotify Stats App</h1>\n        </div>\n\n       \n        <main>\n\n        <Router>\n        {/*<Navigation />*/}\n        <Switch>\n          <Route path=\"/\" exact component={() => <Body token={this.state.token} />} />\n          <Route path=\"/playlists\" exact component={() => <Playlist token={this.state.token} />} />\n          <Route path=\"/artists\" exact component={() => <TopArtists token={this.state.token} />} />\n          <Route path=\"/toptracks\" exact component={() => <TopTracks token={this.state.token} />} />\n        </Switch>\n        </Router>\n\n        \n        \n        </main>\n          \n      </div>\n      )\n    }\n  \n}\n\n\n\nexport default App;\n","/Users/pkamanboina/TriDevApp/src/Body.js",["39"],"import React from \"react\";\nimport \"./Body.css\"\nimport { Redirect } from \"react-router-dom\";\n\nlet accessToken\nclass Body extends React.Component{\n\n  constructor() {\n    super()\n    this.state = {\n      user: {\n        name: \"\"\n      },\n      isLoggedIn: false\n    }\n  }\n\n  componentDidMount() {\n  \n    if(!this.props.token) \n      return;\n    else \n      this.setState({isLoggedIn: true})\n\n    accessToken = this.props.token\n    \n    fetch(\"https://api.spotify.com/v1/me\", {\n      headers: {'Authorization': 'Bearer ' + accessToken}\n    }).then(response => response.json())\n    .then(data => this.setState({\n      user: {\n        name: data.display_name,\n        imgUrl: data.images[0].url\n      },\n      redirect: null\n    }))\n\n    \n    \n\n\n  }\n  \n  \n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n\n      \n      <div>\n        \n        <div className=\"profile\">\n          <img src = {this.state.user.imgUrl} style = {{width: '60px'}}></img>\n          <h1 style={{display: !this.state.user.name && \"none\"}} className=\"username\">\n            Username: {this.state.user.name}\n          </h1>\n        </div>\n        <button style={{display: this.state.isLoggedIn && \"none\"}} className=\"login\" onClick={handleLogin}> Login </button>\n        <button className=\"artistsButton\" onClick={handleTopArtists}> Top Artists </button>\n        <button className=\"playlistsButton\" onClick={handlePlaylists}> Playlists </button>\n        <button className=\"topTracksButton\" onClick={handleTopTracks}> Top Tracks </button>\n        <br />\n        <hr />\n       \n        <div style={{display: 'flex'}}>\n        <br />\n        <hr />\n        \n\n          </div>\n        </div>\n        \n\n    );\n  }\n}\n\n\nfunction handleLogin() {\n  window.open(\"http://localhost:8888/login\");\n}\n\nfunction handleTopTracks() {\n  window.open(\"http://localhost:3000/toptracks/?access_token=\" + accessToken)\n}\n\n\nfunction handleTopArtists() {\n  window.open(\"http://localhost:3000/artists/?access_token=\" + accessToken)\n}\nfunction handlePlaylists() {\n  window.open(\"http://localhost:3000/playlists/?access_token=\" + accessToken)\n}\n\n\n\n\nexport default Body\n","/Users/pkamanboina/TriDevApp/src/Playlist.js",["40"],"import React from \"react\"\n\n\nclass Playlist extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n\n        }\n\n    }\n\n    componentDidMount() {\n        if(!this.props.token) return;\n\n    fetch('https://api.spotify.com/v1/me/playlists', {\n      headers: {'Authorization': 'Bearer ' + this.props.token}\n    }).then(response => response.json())\n    .then(data => this.setState({\n      playlists: data.items.map(item => {\n        return {\n          name: item.name,\n          imageUrl: item.images[0].url, \n          songs: []\n        }\n    })\n    }))\n    }\n    render() {\n        return(\n        <div>\n            {this.state.playlists ?\n            <div className=\"playlists\">\n\n            <h3>Playlists:</h3>\n            <br />\n            {this.state.playlists.map(playlist => \n            <div> \n              <div>\n              <img src = {playlist.imageUrl} style = {{width: '160px'}}></img>\n              </div>\n              <p>{playlist.name}</p>\n          </div>\n          )}\n          </div>\n          : []\n          }\n        </div>\n        )\n    }\n}\n\nexport default Playlist\n",["41","42"],"/Users/pkamanboina/TriDevApp/src/TopTracks.js",[],"/Users/pkamanboina/TriDevApp/src/TopArtists.js",["43"],"import React from \"react\"\n\nclass TopArtists extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            \n        }\n    }\n\n    componentDidMount() {\n        \n\n        if (!this.props.token)\n            return;\n        \n\n        fetch('https://api.spotify.com/v1/me/top/artists', {\n            headers: {'Authorization': 'Bearer ' + this.props.token}\n        }).then(response => response.json()) \n        .then(data => this.setState({\n            topArtists: data.items.map(artist => {\n            return {\n                name: artist.name,\n                imageUrl: artist.images[2].url\n            }\n        })\n        })) \n    }\n\n    render() {\n        return (\n            <div>\n            {this.state.topArtists ? \n            <div className = \"topArtists\">\n            \n            <h3>Top Artists:</h3>\n            <br />\n            {this.state.topArtists.map(artist => \n              <div>\n                  <div>\n                  <img src = {artist.imageUrl}></img>\n                  </div>\n                  <p>{artist.name}</p>\n              </div>\n              )}\n            </div>\n          : []\n          }\n          </div>\n        \n        )\n    }\n}\n\nexport default TopArtists",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":8,"column":10,"nodeType":"50","messageId":"51","endLine":8,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":55,"column":11,"nodeType":"54","endLine":55,"endColumn":73},{"ruleId":"52","severity":1,"message":"53","line":40,"column":15,"nodeType":"54","endLine":40,"endColumn":73},{"ruleId":"44","replacedBy":"55"},{"ruleId":"46","replacedBy":"56"},{"ruleId":"52","severity":1,"message":"53","line":42,"column":19,"nodeType":"54","endLine":42,"endColumn":48},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["57"],["58"],"no-global-assign","no-unsafe-negation"]